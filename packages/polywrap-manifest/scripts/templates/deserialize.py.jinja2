# This file was automatically generated by scripts/templates/deserialize.py.jinja2.
# DO NOT MODIFY IT BY HAND. Instead, modify scripts/templates/deserialize.py.jinja2,
# run python ./scripts/generate.py to regenerate this file.
"""This module contains functions for deserializing msgpack encoded wrap manifests."""

from typing import Optional

from polywrap_msgpack import msgpack_decode
from polywrap_result import Ok, Err, Result
from pydantic import ValidationError
from .manifest import *


def _deserialize_wrap_manifest(
    manifest: bytes, options: Optional[DeserializeManifestOptions] = None
) -> AnyWrapManifest:
    decoded_manifest = msgpack_decode(manifest)
    if not decoded_manifest.get("version"):
        raise ValueError("Expected manifest version to be defined!")
    
    no_validate = options and options.no_validate
    manifest_version = WrapManifestVersions(decoded_manifest["version"])
    match manifest_version.value:
    {%- for version in versions %}
        case "{{ version.manifest_version }}":
            if no_validate:
                decoded_manifest["version"] = Version(decoded_manifest["version"])
                decoded_manifest["abi"] = WrapAbi_{{ version.manifest_module_version }}_{{ version.abi_module_version }}.construct(**decoded_manifest["abi"])
                WrapManifest_{{ version.manifest_module_version }}.construct(**decoded_manifest) 
            return WrapManifest_{{ version.manifest_module_version }}(**decoded_manifest)
    {%- endfor %}
        case _:
            raise ValueError(f"Invalid wrap manifest version: {manifest_version}")


def deserialize_wrap_manifest(
    manifest: bytes, options: Optional[DeserializeManifestOptions] = None
) -> Result[AnyWrapManifest]:
    """Deserialize a wrap manifest from bytes.

    Args:
        manifest: The manifest to deserialize.
        options: Options for deserialization. Defaults to None.
    
    Raises:
        ValueError: If the manifest version is invalid.
        ValidationError: If the manifest is invalid.

    Returns:
        Result[AnyWrapManifest]: The Result of deserialized manifest.
    """
    try:
        return Ok(_deserialize_wrap_manifest(manifest, options))
    except (ValueError, ValidationError) as err:
        return Err(err)
