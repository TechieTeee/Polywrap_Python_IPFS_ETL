name: CD
on:
  # When Pull Request is merged
  pull_request_target:
    types: [closed]

jobs:
  GetVersion:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    outputs:
      version: ${{ env.RELEASE_VERSION }}
    if: |
      github.event.pull_request.user.login == 'polywrap-build-bot' &&
      github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Halt release if CI failed
        run: exit 1
        if: ${{ github.event.workflow_run.conclusion == 'failure' }}
      - name: Read VERSION into env.RELEASE_VERSION
        run: echo RELEASE_VERSION=$(cat VERSION) >> $GITHUB_ENV
      - name: Check if tag Exists
        id: tag_check
        shell: bash -ex {0}
        run: |
          GET_API_URL="https://api.github.com/repos/${{github.repository}}/git/ref/tags/${{env.RELEASE_VERSION}}"
          http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
            -H "Authorization: token ${GITHUB_TOKEN}")
          if [ "$http_status_code" -ne "404" ] ; then
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Github-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs:
      - GetVersion
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: print version with needs
        run: echo ${{ needs.GetVersion.outputs.version }}
      - id: changelog
        name: "Generate release changelog"
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          unreleasedOnly: true
          unreleasedLabel: ${{ needs.GetVersion.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.GetVersion.outputs.version }}
          release_name: Release ${{ needs.GetVersion.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: true
          prerelease: false
